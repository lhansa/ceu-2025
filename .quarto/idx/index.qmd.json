{"title":"Tu trabajo no es hacer modelos; es entender a personas","markdown":{"yaml":{"title":"Tu trabajo no es hacer modelos; es entender a personas","subtitle":"Una tarea imprescindible que no aprendes estudiando","author":"Leonardo Hansa - Ebiquity","date":"05/22/2025","date-format":"D/M/YYYY","format":{"revealjs":{"theme":["simple","custom.scss"],"logo":"img/favicon.png","transition":"slide"}},"execute":{"eval":true,"echo":false}},"headingText":"Create ggplot theme based on minimal with no gridlines.","containsRefs":false,"markdown":"\n\n```{r}\n#| label: libs\n#| include: false\n\nlibrary(ggplot2)\nlibrary(ggdag)\n\n# Title is size 8 and bold, and caption is size 6.\ntheme_slides <- function() {\n  theme_minimal() +\n    theme(\n      panel.grid.major = element_blank(),\n      panel.grid.minor = element_blank(),\n      plot.title = element_text(size = 16),\n      # plot.title = element_text(face = \"bold\"),\n      # plot.caption = element_text(size = 10),\n      # plot.subtitle = element_text(size = 10),\n      # plot.title.position = \"plot\",\n      # plot.caption.position = \"plot\",\n      # plot.margin = margin(0.5, 0.5, 0.5, 0.5, \"cm\"),\n      # axis.text = element_text(size = 8),\n      axis.ticks = element_blank(),\n      axis.line = element_blank()\n    )\n}\ntheme_set(theme_slides())\n```\n\n# 1. \"Mis ventas están cayendo\"\n\n## Un cliente se queja de que sus ventas están cayendo\n\n::: {.incremental}\n- Sector: salud privada\n- Rápida expansión por el país\n- Presidente, muy borde\n- **Problema planteado: a qué se debe la caída.**\n:::\n\n\n## Sus ventas\n\n```{r}\n#| label: compute-sales\nset.seed(31818)\nn_dates <- 52 * 3\ntime <- 1:n_dates\n\nstores  <- 50 + 0.8 * time\n\n# create sales per store decreasing smoothly overtime\nsales_per_store <- 200 - 0.1 * (time ** 1.2) + rnorm(n_dates, 0, 5)\n\ntotal_sales <- stores * sales_per_store\n\ndf1 <- data.frame(\n  date = 1:n_dates,\n  sales_per_store, \n  total_sales\n)\n\n# df1 |> \n#   tidyr::pivot_longer(-date) |> \n#   ggplot() + \n#   geom_line(aes(x = date, y = value)) +\n#   facet_wrap(~ name, scales = \"free_y\", ncol = 2)\n\n```\n\n```{r}\n#| label: plot-total-sales\nggplot(df1) + \n  # geom_line(aes(x = date, y = sales_per_store), color = \"#800080\", linewidth = 1) +\n  geom_line(aes(x = date, y = total_sales), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df1$total_sales) * 1.1 )) + \n  labs(\n    title = \"Evolución de ventas semanales durante 3 años\",\n    x = \"\",\n    y = \"Ventas (unidades ficticias)\",\n    caption = \"Los datos son inventados\"\n  ) \n\n```\n\n## Pregunta: ¿Qué hemos interpretado mal?\n\n## Las ventas que caen realmente\n\n```{r}\n#| label: plot-sales-per-store\nggplot(df1) + \n  geom_line(aes(x = date, y = sales_per_store), color = \"#800080\", linewidth = 1) +\n  # geom_line(aes(x = date, y = total_sales), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df1$sales_per_store) * 1.1 )) + \n  labs(\n    title = \"Evolución de ventas semanales por tienda\",\n    x = \"\",\n    y = \"Ventas (unidades ficticias)\",\n    caption = \"Los datos son inventados\"\n  ) \n```\n\n## Aprendizaje\n\n> Tu cliente sabe cuál es el problema de su empresa, pero para ti puede no ser intuitivo.\n\n## Recomendación\n\n![Libro que te enseña a escuchar](img/rompe-barrera.jpg)\n\n\n# 2. \"¿A qué se debe esta subida?\" \"A la publicidad. Seguro.\"\n\n## Un cliente nos manda datos actualizados\n\n```{r}\n#| label: data-visits\n\nset.seed(31818)\nn_dates <- 52 * 2.5\ntime <- 1:n_dates\n\nvisits <- 100 + 0.8 * time + rnorm(n_dates, 0, 5)\nvisits <- ifelse(time > 52 * 2, visits * 1.3, visits)\n\ndf <- data.frame(\n  date = 1:n_dates,\n  visits\n)\n\nggplot(df) + \n  geom_line(aes(x = date, y = visits), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df$visits) * 1.1 )) + \n  labs(\n    title = \"Evolución de visitas semanales durante 2 años y un poco más\",\n    x = \"\",\n    y = \"Visitas\",\n    caption = \"Los datos son inventados\"\n  )\n\n```\n\n## Y dice que la subida es por la campaña que hubo aquí\n\n```{r}\n#| label: data-visits-ads\n\ncampaign <- numeric(n_dates)\ncampaign <- ifelse(time > 52 * 2 & time < 52 * 2.2, 1, 0)\n\ndf$campaign <- campaign\n\nggplot(df) + \n  # add rectangle where campaign is 1\n  geom_line(aes(x = date, y = visits), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df$visits) * 1.1 )) + \n  annotate(\n    \"rect\",\n    xmin = 52 * 2, xmax = 52 * 2.2, ymin = -Inf, ymax = Inf, \n    fill = \"#800080\", \n    alpha = 0.2\n  ) +\n  labs(\n    title = \"Evolución de visitas semanales durante 2 años y un poco más\",\n    x = \"\",\n    y = \"Visitas\",\n    caption = \"Los datos son inventados\"\n  )\n```\n\n## Si haces un modelo, el cliente va a creer que tiene razón\n\n```{r}\n#| label: modelo1\n\n# model with brms\nfit <- lm(visits ~ date + campaign, data = df)\ncoeffs <- broom::tidy(summary(fit))\nknitr::kable(\n  coeffs, \n  col.names = c(\"Variable\", \"Estimación\", \"Error estándar\", \"t valor\", \"p valor\"),\n  format = \"html\",\n  row.names = FALSE\n)\n\n# fit <- brms::brm(visits ~ campaign, data = df)\n# # extract posterior samples for campaign\n# posterior <- brms::posterior_samples(fit)\n# head(posterior)\n\n# ggplot(posterior) + \n#   geom_histogram(aes(x = b_campaign), fill = \"#800080\")\n\n\n```\n\n## Diálogo en la presentación de resultados\n\n![](img/comic.png)\n\n## Así que estaba todo mal\n\n## Pregunta: ¿qué podíamos hacer?\n\n## Para corregirlo tuvimos que cambiar de ahí en adelante la variable\n\n```{r}\n#| label: data-visits-ads-corrected\n\nmean_period_1 <- mean(df$visits[(52 * 1.9):(52 * 2)])\nmean_period_2 <- mean(df$visits[(52 * 2 + 1):length(df$visits)])\n\ncorrection_factor <- df$visits[52 * 2] / df$visits[52 * 2 + 1]\n\ndf$visits_corrected <- ifelse(\n  df$date <= 52 * 2,\n  df$visits,\n  df$visits * correction_factor \n)\n\nggplot(df) + \n  geom_line(aes(x = date, y = visits), color = \"#800080\", linewidth = 1, linetype = 2) +\n  geom_line(aes(x = date, y = visits_corrected), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df$visits) * 1.1 )) + \n  labs(\n    title = \"Evolución de visitas semanales originales y  corregidas\",\n    x = \"\",\n    y = \"Visitas\",\n    caption = \"Los datos son inventados\"\n  )\n\n```\n\n## Cómo afectó esto al modelo es otra historia\n```{r}\n#| label: consecuencias-modelo\nfit <- lm(visits_corrected ~ date + campaign, data = df)\ncoeffs <- broom::tidy(summary(fit))\nknitr::kable(\n  coeffs, \n  col.names = c(\"Variable\", \"Estimación\", \"Error estándar\", \"t valor\", \"p valor\"),\n  format = \"html\",\n  row.names = FALSE\n)\n```\n\n## Aprendizaje\n\n> Te encontrarás en situaciones en las que no hay datos buenos. Todos están mal.\n\n## Recomendación\n\n> Aprende a tratar datos de la forma más artesanal posible. Nada te dará tanto control sobre tus análisis.\n\n# Tengo una cosa para ti\n\n## https://leonardohansa.com/ceu-regalo\n\n![Código con ejercicios y newsletter](img/subs.PNG)\n\n# 3. ¿Cuántos caminos hay entre Madrid y Barcelona?\n\n## ¿Cuánto influye la publicidad en las ventas de billetes de tren?\n\n- Cliente: compañía ferroviaria no española.\n- Le interesa especialmente una de sus rutas\n\n## ¿Qué es una ruta?\n\n```{r}\n#| label: ggdag1\nlibrary(ggdag)\n\ntidy_ggdag <- dagify(\n  Madrid ~ ~Guadalajara, \n  Guadalajara ~ ~Calatayud,\n  Calatayud ~ ~Zaragoza,\n  Zaragoza ~ ~Lerida, \n  Lerida ~ ~Tarragona, \n  Tarragona ~ ~Prat, \n  Prat ~ ~Barcelona, \n  exposure = \"Madrid\", \n  outcome = \"Barcelona\"\n) %>%\n  tidy_dagitty()\n\nggdag(\n  tidy_ggdag, \n  text_size = 5, \n  text_col = \"#800080\",\n  node = FALSE\n) +\n  theme_dag()\n```\n\n## Pero esto se nos podía ir de las manos\n\n```{r}\n#| label: ggdag2\ntidy_ggdag <- dagify(\n  Madrid ~ ~Guadalajara + Calatayud + Zaragoza + Lerida + Tarragona + Prat + Barcelona,\n  Guadalajara ~ ~Calatayud + Zaragoza + Lerida + Tarragona + Prat + Barcelona,\n  Calatayud ~ ~Zaragoza + Lerida + Tarragona + Prat + Barcelona, \n  Zaragoza ~ ~Lerida + Tarragona + Prat + Barcelona,\n  Lerida ~ ~Tarragona + Prat + Barcelona,\n  Tarragona ~ ~Prat + Barcelona,\n  Prat ~ ~Barcelona,\n  exposure = \"Madrid\", \n  outcome = \"Barcelona\"\n) %>%\n  tidy_dagitty()\n\nggdag(\n  tidy_ggdag, \n  text_size = 5, \n  text_col = \"#800080\",\n  node = FALSE\n) +\n  theme_dag()\n```\n\n## ¿Cuántos tramos teníamos?\n\nHabía que calcular las ventas de $8\\times7 = 56$ tramos.\n\n**¿O no?**\n\n## Contexto: Marketing vs Ventas\n\n- Para la empresa, la ruta Madrid-Barcelona incluía todas esas estaciones.\n- Pero nuestro cliente era Marketing.\n- Marketing hacía campañas Madrid-Barcelona, pero no mencionaba las estaciones intermedias.\n\n## Nuestra ruta, la de Marketing\n\n```{r}\n#| label: ggdag3\ntidy_ggdag <- dagify(\n  Madrid ~ ~Guadalajara + Calatayud + Zaragoza + Lerida + Tarragona + Prat + Barcelona,\n  Barcelona ~ ~Guadalajara + Calatayud + Zaragoza + Lerida + Tarragona + Prat,\n  exposure = \"Madrid\", \n  outcome = \"Barcelona\"\n) %>%\n  tidy_dagitty()\n\nggdag(\n  tidy_ggdag, \n  text_size = 5, \n  text_col = \"#800080\",\n  node = FALSE\n) +\n  theme_dag()\n```\n\n## Lo que modelizamos\n```{r}\n#| label: train-sales\n\ndf_train_sales <- readr::read_csv(\"data/ventas.csv\", show_col_types = FALSE)\n\ndf_train_sales$fecha <- as.Date(df_train_sales$fecha, format = \"%d/%m/%Y\")\n\nggplot(df_train_sales) + \n  geom_line(aes(x = fecha, y = ventas), color = \"#800080\", linewidth = 1) +\n  # show thousands on y axis\n  scale_y_continuous(labels = scales::label_number(scale = 1e-3, suffix = \"\")) +\n  labs(\n    title = \"Evolución de ventas semanales\",\n    x = \"\",\n    y = \"Ventas (miles de €)\",\n    caption = \"Los datos son reales pero anónimos\"\n  )\n```\n\n## Aprendizaje\n\n> La misma variable objetivo puede ser cosas muy diferentes en función de quién sea tu cliente.\n\n## Recomendación\n\n![Libro que te enseña a entender al de enfrente](img/como-ganar.jpg)\n\n\n# 4. \"Qué clientes pagarán más y cuáles menos\"\n\n## Un cliente quiere saber qué clientes pagarán más y cuáles menos\n\n- Empresa de renting\n- Datos cliente a cliente\n- Objetivo: predecir cuánto gastará cada cliente al año siguiente\n\n## ¿Cuál debería ser la variable objetivo?\n\n```{r}\nset.seed(31818)\nn_clientes <- 500\navg_inc <- 50\nyear_diffs <- rnorm(n_clientes, avg_inc, 30)\n\ndf_customers <- data.frame(\n  id = 1:n_clientes,\n  year_diffs\n)\n\nggplot(df_customers) + \n  geom_col(aes(x = reorder(id, year_diffs), y = year_diffs), fill = \"#800080\") + \n  labs(\n    x = \"\", y = \"Diferencia anual (unid. monetarias)\", \n    title = \"Variación de gasto anual por cliente\",\n    caption = \"Los datos son inventados\"\n  ) + \n  coord_flip() + \n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank()\n  )\n```\n\n## Planteamos el problema como uno de regresión\n\n```{r}\n#| label: regression\n\ndf_customers$estimate <- df_customers$year_diffs + rnorm(n_clientes, 0, 10)\n\nggplot(df_customers) + \n  geom_col(aes(x = reorder(id, year_diffs), y = year_diffs), fill = \"#800080\") + \n  geom_point(\n    aes(x = reorder(id, year_diffs), y = estimate), \n    shape = 21, size = 2, fill = \"yellow\", color = \"black\") +\n  labs(\n    x = \"\", y = \"Diferencia anual (unid. monetarias)\", \n    title = \"Variación de gasto anual por cliente\",\n    caption = \"Los datos son inventados\"\n  ) + \n  coord_flip() + \n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank()\n  )\n```\n\n## La dificultad la habíamos puesto nosotros mismos\n\n- No teníamos información para ser suficientemente precisos en la estimación del gasto.\n\n## ¿Cómo lo podríamos haber planteado mejor (sin complicarnos mucho)?\n\n## Un problema de clasificación habría funcionado mejor\n\n```{r}\n#| label: table-class\ndf_customers$bin <- ifelse(df_customers$year_diffs > 0, 1, -1) \n\nwhich_to_show <- c(\n  sample(which(df_customers$bin > 0), 3), \n  sample(which(df_customers$bin < 0), 2)\n)\n\nknitr::kable(\n  df_customers[which_to_show, c(\"year_diffs\", \"bin\")], \n  col.names = c(\"Diferencia anual\", \"Clasificación\"),\n  format = \"html\",\n  row.names = FALSE\n)\n```\n\n## ¿Qué tipo de clasificación?\n\n::: {.incremental}\n- Qué clientes pagarán menos\n- Qué clientes variarán su cuota en cierto valor absoluto\n- Qué clientes pagarán más, cuáles menos y cuáles se quedarán igual\n    + Dificultad: ¿habría que definir umbrales?\n:::\n\n\n## Aprendizaje\n\n> Tu trabajo no es solo procesar unos datos, sino decidir qué tipo de dato necesitas.\n\n## Recomendación\n\n![Para ordenar conceptos: almuanalytics.com](img/almu.PNG)\n\n# 2 anécdotas para terminar\n\n## ¿Cómo se hace un proyecto de segmentación de clientes?\n\nLlego nuevo a un proyecto: \n\n- Segmentación de clientes de un programa de fidelización\n- 5 millones de clientes\n- $> 100$ variables\n\n## Cómo se puede trabajar esto\n\n::: {.incremental}\n- ¿Qué planteamiento se te ocurre?\n- ¿Qué había hecho la consultora?\n- ¿Qué hicimos?\n:::\n\n## Estimación de asistentes a un evento futuro sin experiencia previa\n\n- Objetivo: predecir cuántas personas asistirán a un evento\n- Datos: ninguno\n\n## Recomendación\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![](img/incertidumbre.jpg)\n:::\n\n::: {.column width=\"50%\"}\n![](img/signal-noise.jpg)\n:::\n\n::::\n\n\n# leonardohansa.com/ceu-regalo","srcMarkdownNoYaml":"\n\n```{r}\n#| label: libs\n#| include: false\n\nlibrary(ggplot2)\nlibrary(ggdag)\n\n# Create ggplot theme based on minimal with no gridlines. \n# Title is size 8 and bold, and caption is size 6.\ntheme_slides <- function() {\n  theme_minimal() +\n    theme(\n      panel.grid.major = element_blank(),\n      panel.grid.minor = element_blank(),\n      plot.title = element_text(size = 16),\n      # plot.title = element_text(face = \"bold\"),\n      # plot.caption = element_text(size = 10),\n      # plot.subtitle = element_text(size = 10),\n      # plot.title.position = \"plot\",\n      # plot.caption.position = \"plot\",\n      # plot.margin = margin(0.5, 0.5, 0.5, 0.5, \"cm\"),\n      # axis.text = element_text(size = 8),\n      axis.ticks = element_blank(),\n      axis.line = element_blank()\n    )\n}\ntheme_set(theme_slides())\n```\n\n# 1. \"Mis ventas están cayendo\"\n\n## Un cliente se queja de que sus ventas están cayendo\n\n::: {.incremental}\n- Sector: salud privada\n- Rápida expansión por el país\n- Presidente, muy borde\n- **Problema planteado: a qué se debe la caída.**\n:::\n\n\n## Sus ventas\n\n```{r}\n#| label: compute-sales\nset.seed(31818)\nn_dates <- 52 * 3\ntime <- 1:n_dates\n\nstores  <- 50 + 0.8 * time\n\n# create sales per store decreasing smoothly overtime\nsales_per_store <- 200 - 0.1 * (time ** 1.2) + rnorm(n_dates, 0, 5)\n\ntotal_sales <- stores * sales_per_store\n\ndf1 <- data.frame(\n  date = 1:n_dates,\n  sales_per_store, \n  total_sales\n)\n\n# df1 |> \n#   tidyr::pivot_longer(-date) |> \n#   ggplot() + \n#   geom_line(aes(x = date, y = value)) +\n#   facet_wrap(~ name, scales = \"free_y\", ncol = 2)\n\n```\n\n```{r}\n#| label: plot-total-sales\nggplot(df1) + \n  # geom_line(aes(x = date, y = sales_per_store), color = \"#800080\", linewidth = 1) +\n  geom_line(aes(x = date, y = total_sales), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df1$total_sales) * 1.1 )) + \n  labs(\n    title = \"Evolución de ventas semanales durante 3 años\",\n    x = \"\",\n    y = \"Ventas (unidades ficticias)\",\n    caption = \"Los datos son inventados\"\n  ) \n\n```\n\n## Pregunta: ¿Qué hemos interpretado mal?\n\n## Las ventas que caen realmente\n\n```{r}\n#| label: plot-sales-per-store\nggplot(df1) + \n  geom_line(aes(x = date, y = sales_per_store), color = \"#800080\", linewidth = 1) +\n  # geom_line(aes(x = date, y = total_sales), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df1$sales_per_store) * 1.1 )) + \n  labs(\n    title = \"Evolución de ventas semanales por tienda\",\n    x = \"\",\n    y = \"Ventas (unidades ficticias)\",\n    caption = \"Los datos son inventados\"\n  ) \n```\n\n## Aprendizaje\n\n> Tu cliente sabe cuál es el problema de su empresa, pero para ti puede no ser intuitivo.\n\n## Recomendación\n\n![Libro que te enseña a escuchar](img/rompe-barrera.jpg)\n\n\n# 2. \"¿A qué se debe esta subida?\" \"A la publicidad. Seguro.\"\n\n## Un cliente nos manda datos actualizados\n\n```{r}\n#| label: data-visits\n\nset.seed(31818)\nn_dates <- 52 * 2.5\ntime <- 1:n_dates\n\nvisits <- 100 + 0.8 * time + rnorm(n_dates, 0, 5)\nvisits <- ifelse(time > 52 * 2, visits * 1.3, visits)\n\ndf <- data.frame(\n  date = 1:n_dates,\n  visits\n)\n\nggplot(df) + \n  geom_line(aes(x = date, y = visits), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df$visits) * 1.1 )) + \n  labs(\n    title = \"Evolución de visitas semanales durante 2 años y un poco más\",\n    x = \"\",\n    y = \"Visitas\",\n    caption = \"Los datos son inventados\"\n  )\n\n```\n\n## Y dice que la subida es por la campaña que hubo aquí\n\n```{r}\n#| label: data-visits-ads\n\ncampaign <- numeric(n_dates)\ncampaign <- ifelse(time > 52 * 2 & time < 52 * 2.2, 1, 0)\n\ndf$campaign <- campaign\n\nggplot(df) + \n  # add rectangle where campaign is 1\n  geom_line(aes(x = date, y = visits), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df$visits) * 1.1 )) + \n  annotate(\n    \"rect\",\n    xmin = 52 * 2, xmax = 52 * 2.2, ymin = -Inf, ymax = Inf, \n    fill = \"#800080\", \n    alpha = 0.2\n  ) +\n  labs(\n    title = \"Evolución de visitas semanales durante 2 años y un poco más\",\n    x = \"\",\n    y = \"Visitas\",\n    caption = \"Los datos son inventados\"\n  )\n```\n\n## Si haces un modelo, el cliente va a creer que tiene razón\n\n```{r}\n#| label: modelo1\n\n# model with brms\nfit <- lm(visits ~ date + campaign, data = df)\ncoeffs <- broom::tidy(summary(fit))\nknitr::kable(\n  coeffs, \n  col.names = c(\"Variable\", \"Estimación\", \"Error estándar\", \"t valor\", \"p valor\"),\n  format = \"html\",\n  row.names = FALSE\n)\n\n# fit <- brms::brm(visits ~ campaign, data = df)\n# # extract posterior samples for campaign\n# posterior <- brms::posterior_samples(fit)\n# head(posterior)\n\n# ggplot(posterior) + \n#   geom_histogram(aes(x = b_campaign), fill = \"#800080\")\n\n\n```\n\n## Diálogo en la presentación de resultados\n\n![](img/comic.png)\n\n## Así que estaba todo mal\n\n## Pregunta: ¿qué podíamos hacer?\n\n## Para corregirlo tuvimos que cambiar de ahí en adelante la variable\n\n```{r}\n#| label: data-visits-ads-corrected\n\nmean_period_1 <- mean(df$visits[(52 * 1.9):(52 * 2)])\nmean_period_2 <- mean(df$visits[(52 * 2 + 1):length(df$visits)])\n\ncorrection_factor <- df$visits[52 * 2] / df$visits[52 * 2 + 1]\n\ndf$visits_corrected <- ifelse(\n  df$date <= 52 * 2,\n  df$visits,\n  df$visits * correction_factor \n)\n\nggplot(df) + \n  geom_line(aes(x = date, y = visits), color = \"#800080\", linewidth = 1, linetype = 2) +\n  geom_line(aes(x = date, y = visits_corrected), color = \"#800080\", linewidth = 1) +\n  scale_y_continuous(limits = c(0, max(df$visits) * 1.1 )) + \n  labs(\n    title = \"Evolución de visitas semanales originales y  corregidas\",\n    x = \"\",\n    y = \"Visitas\",\n    caption = \"Los datos son inventados\"\n  )\n\n```\n\n## Cómo afectó esto al modelo es otra historia\n```{r}\n#| label: consecuencias-modelo\nfit <- lm(visits_corrected ~ date + campaign, data = df)\ncoeffs <- broom::tidy(summary(fit))\nknitr::kable(\n  coeffs, \n  col.names = c(\"Variable\", \"Estimación\", \"Error estándar\", \"t valor\", \"p valor\"),\n  format = \"html\",\n  row.names = FALSE\n)\n```\n\n## Aprendizaje\n\n> Te encontrarás en situaciones en las que no hay datos buenos. Todos están mal.\n\n## Recomendación\n\n> Aprende a tratar datos de la forma más artesanal posible. Nada te dará tanto control sobre tus análisis.\n\n# Tengo una cosa para ti\n\n## https://leonardohansa.com/ceu-regalo\n\n![Código con ejercicios y newsletter](img/subs.PNG)\n\n# 3. ¿Cuántos caminos hay entre Madrid y Barcelona?\n\n## ¿Cuánto influye la publicidad en las ventas de billetes de tren?\n\n- Cliente: compañía ferroviaria no española.\n- Le interesa especialmente una de sus rutas\n\n## ¿Qué es una ruta?\n\n```{r}\n#| label: ggdag1\nlibrary(ggdag)\n\ntidy_ggdag <- dagify(\n  Madrid ~ ~Guadalajara, \n  Guadalajara ~ ~Calatayud,\n  Calatayud ~ ~Zaragoza,\n  Zaragoza ~ ~Lerida, \n  Lerida ~ ~Tarragona, \n  Tarragona ~ ~Prat, \n  Prat ~ ~Barcelona, \n  exposure = \"Madrid\", \n  outcome = \"Barcelona\"\n) %>%\n  tidy_dagitty()\n\nggdag(\n  tidy_ggdag, \n  text_size = 5, \n  text_col = \"#800080\",\n  node = FALSE\n) +\n  theme_dag()\n```\n\n## Pero esto se nos podía ir de las manos\n\n```{r}\n#| label: ggdag2\ntidy_ggdag <- dagify(\n  Madrid ~ ~Guadalajara + Calatayud + Zaragoza + Lerida + Tarragona + Prat + Barcelona,\n  Guadalajara ~ ~Calatayud + Zaragoza + Lerida + Tarragona + Prat + Barcelona,\n  Calatayud ~ ~Zaragoza + Lerida + Tarragona + Prat + Barcelona, \n  Zaragoza ~ ~Lerida + Tarragona + Prat + Barcelona,\n  Lerida ~ ~Tarragona + Prat + Barcelona,\n  Tarragona ~ ~Prat + Barcelona,\n  Prat ~ ~Barcelona,\n  exposure = \"Madrid\", \n  outcome = \"Barcelona\"\n) %>%\n  tidy_dagitty()\n\nggdag(\n  tidy_ggdag, \n  text_size = 5, \n  text_col = \"#800080\",\n  node = FALSE\n) +\n  theme_dag()\n```\n\n## ¿Cuántos tramos teníamos?\n\nHabía que calcular las ventas de $8\\times7 = 56$ tramos.\n\n**¿O no?**\n\n## Contexto: Marketing vs Ventas\n\n- Para la empresa, la ruta Madrid-Barcelona incluía todas esas estaciones.\n- Pero nuestro cliente era Marketing.\n- Marketing hacía campañas Madrid-Barcelona, pero no mencionaba las estaciones intermedias.\n\n## Nuestra ruta, la de Marketing\n\n```{r}\n#| label: ggdag3\ntidy_ggdag <- dagify(\n  Madrid ~ ~Guadalajara + Calatayud + Zaragoza + Lerida + Tarragona + Prat + Barcelona,\n  Barcelona ~ ~Guadalajara + Calatayud + Zaragoza + Lerida + Tarragona + Prat,\n  exposure = \"Madrid\", \n  outcome = \"Barcelona\"\n) %>%\n  tidy_dagitty()\n\nggdag(\n  tidy_ggdag, \n  text_size = 5, \n  text_col = \"#800080\",\n  node = FALSE\n) +\n  theme_dag()\n```\n\n## Lo que modelizamos\n```{r}\n#| label: train-sales\n\ndf_train_sales <- readr::read_csv(\"data/ventas.csv\", show_col_types = FALSE)\n\ndf_train_sales$fecha <- as.Date(df_train_sales$fecha, format = \"%d/%m/%Y\")\n\nggplot(df_train_sales) + \n  geom_line(aes(x = fecha, y = ventas), color = \"#800080\", linewidth = 1) +\n  # show thousands on y axis\n  scale_y_continuous(labels = scales::label_number(scale = 1e-3, suffix = \"\")) +\n  labs(\n    title = \"Evolución de ventas semanales\",\n    x = \"\",\n    y = \"Ventas (miles de €)\",\n    caption = \"Los datos son reales pero anónimos\"\n  )\n```\n\n## Aprendizaje\n\n> La misma variable objetivo puede ser cosas muy diferentes en función de quién sea tu cliente.\n\n## Recomendación\n\n![Libro que te enseña a entender al de enfrente](img/como-ganar.jpg)\n\n\n# 4. \"Qué clientes pagarán más y cuáles menos\"\n\n## Un cliente quiere saber qué clientes pagarán más y cuáles menos\n\n- Empresa de renting\n- Datos cliente a cliente\n- Objetivo: predecir cuánto gastará cada cliente al año siguiente\n\n## ¿Cuál debería ser la variable objetivo?\n\n```{r}\nset.seed(31818)\nn_clientes <- 500\navg_inc <- 50\nyear_diffs <- rnorm(n_clientes, avg_inc, 30)\n\ndf_customers <- data.frame(\n  id = 1:n_clientes,\n  year_diffs\n)\n\nggplot(df_customers) + \n  geom_col(aes(x = reorder(id, year_diffs), y = year_diffs), fill = \"#800080\") + \n  labs(\n    x = \"\", y = \"Diferencia anual (unid. monetarias)\", \n    title = \"Variación de gasto anual por cliente\",\n    caption = \"Los datos son inventados\"\n  ) + \n  coord_flip() + \n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank()\n  )\n```\n\n## Planteamos el problema como uno de regresión\n\n```{r}\n#| label: regression\n\ndf_customers$estimate <- df_customers$year_diffs + rnorm(n_clientes, 0, 10)\n\nggplot(df_customers) + \n  geom_col(aes(x = reorder(id, year_diffs), y = year_diffs), fill = \"#800080\") + \n  geom_point(\n    aes(x = reorder(id, year_diffs), y = estimate), \n    shape = 21, size = 2, fill = \"yellow\", color = \"black\") +\n  labs(\n    x = \"\", y = \"Diferencia anual (unid. monetarias)\", \n    title = \"Variación de gasto anual por cliente\",\n    caption = \"Los datos son inventados\"\n  ) + \n  coord_flip() + \n  theme(\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank()\n  )\n```\n\n## La dificultad la habíamos puesto nosotros mismos\n\n- No teníamos información para ser suficientemente precisos en la estimación del gasto.\n\n## ¿Cómo lo podríamos haber planteado mejor (sin complicarnos mucho)?\n\n## Un problema de clasificación habría funcionado mejor\n\n```{r}\n#| label: table-class\ndf_customers$bin <- ifelse(df_customers$year_diffs > 0, 1, -1) \n\nwhich_to_show <- c(\n  sample(which(df_customers$bin > 0), 3), \n  sample(which(df_customers$bin < 0), 2)\n)\n\nknitr::kable(\n  df_customers[which_to_show, c(\"year_diffs\", \"bin\")], \n  col.names = c(\"Diferencia anual\", \"Clasificación\"),\n  format = \"html\",\n  row.names = FALSE\n)\n```\n\n## ¿Qué tipo de clasificación?\n\n::: {.incremental}\n- Qué clientes pagarán menos\n- Qué clientes variarán su cuota en cierto valor absoluto\n- Qué clientes pagarán más, cuáles menos y cuáles se quedarán igual\n    + Dificultad: ¿habría que definir umbrales?\n:::\n\n\n## Aprendizaje\n\n> Tu trabajo no es solo procesar unos datos, sino decidir qué tipo de dato necesitas.\n\n## Recomendación\n\n![Para ordenar conceptos: almuanalytics.com](img/almu.PNG)\n\n# 2 anécdotas para terminar\n\n## ¿Cómo se hace un proyecto de segmentación de clientes?\n\nLlego nuevo a un proyecto: \n\n- Segmentación de clientes de un programa de fidelización\n- 5 millones de clientes\n- $> 100$ variables\n\n## Cómo se puede trabajar esto\n\n::: {.incremental}\n- ¿Qué planteamiento se te ocurre?\n- ¿Qué había hecho la consultora?\n- ¿Qué hicimos?\n:::\n\n## Estimación de asistentes a un evento futuro sin experiencia previa\n\n- Objetivo: predecir cuántas personas asistirán a un evento\n- Datos: ninguno\n\n## Recomendación\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n![](img/incertidumbre.jpg)\n:::\n\n::: {.column width=\"50%\"}\n![](img/signal-noise.jpg)\n:::\n\n::::\n\n\n# leonardohansa.com/ceu-regalo"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.9/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.7.30","auto-stretch":true,"title":"Tu trabajo no es hacer modelos; es entender a personas","subtitle":"Una tarea imprescindible que no aprendes estudiando","author":"Leonardo Hansa - Ebiquity","date":"05/22/2025","date-format":"D/M/YYYY","theme":["simple","custom.scss"],"logo":"img/favicon.png","transition":"slide"}}},"projectFormats":["revealjs"]}